# Model Service Mesh Configuration with Linkerd
# This file configures Linkerd service mesh for model services

# Service Profile for model API
apiVersion: linkerd.io/v1alpha2
kind: ServiceProfile
metadata:
  name: model-api
  namespace: staging-models
spec:
  routes:
  - name: GET /health
    condition:
      method: GET
      pathRegex: /health
    responseClasses:
    - condition:
        status:
          min: 200
          max: 299
      isFailure: false
    - condition:
        status:
          min: 500
          max: 599
      isFailure: true
  - name: POST /predict
    condition:
      method: POST
      pathRegex: /predict
    responseClasses:
    - condition:
        status:
          min: 200
          max: 299
      isFailure: false
    - condition:
        status:
          min: 400
          max: 499
      isFailure: true
    - condition:
        status:
          min: 500
          max: 599
      isFailure: true
  - name: GET /models
    condition:
      method: GET
      pathRegex: /models
    responseClasses:
    - condition:
        status:
          min: 200
          max: 299
      isFailure: false
    - condition:
        status:
          min: 500
          max: 599
      isFailure: true
  retryBudget:
    retryRatio: 0.2
    minRetriesPerSecond: 10
    ttl: 10s
  timeout: 30s
---
# Service Profile for MLflow
apiVersion: linkerd.io/v1alpha2
kind: ServiceProfile
metadata:
  name: mlflow-server
  namespace: mlflow
spec:
  routes:
  - name: GET /api/2.0/mlflow/experiments
    condition:
      method: GET
      pathRegex: /api/2.0/mlflow/experiments
    responseClasses:
    - condition:
        status:
          min: 200
          max: 299
      isFailure: false
    - condition:
        status:
          min: 500
          max: 599
      isFailure: true
  - name: POST /api/2.0/mlflow/runs/create
    condition:
      method: POST
      pathRegex: /api/2.0/mlflow/runs/create
    responseClasses:
    - condition:
        status:
          min: 200
          max: 299
      isFailure: false
    - condition:
        status:
          min: 500
          max: 599
      isFailure: true
  retryBudget:
    retryRatio: 0.1
    minRetriesPerSecond: 5
    ttl: 10s
  timeout: 60s
---
# Traffic Split for canary deployments
apiVersion: split.smi-spec.io/v1alpha1
kind: TrafficSplit
metadata:
  name: model-canary
  namespace: staging-models
spec:
  service: model-api
  backends:
  - service: model-api-v1
    weight: 90
  - service: model-api-v2
    weight: 10
---
# Network Policy for model services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: model-network-policy
  namespace: staging-models
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: model-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: linkerd
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: mlflow
    ports:
    - protocol: TCP
      port: 5000
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
---
# Service Monitor for Prometheus (if using Linkerd with Prometheus)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: model-api-metrics
  namespace: staging-models
  labels:
    app: model-api
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: model-api
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
